---
- name: include dynamic info
  include_vars:
    file: "{{ working_dir }}/ansible_run_vars.yml"
    name: dyn_data

#
# Have the volid, now get the disk.
#
- name: Find aws pbench disk
  block:
  - name: get disk id
    shell: "grep pbench {{ working_dir }}/tf/terraform_apply.out | grep id= | grep \"volume\\[{{ sys_index }}\" | cut -d'-' -f2 | cut -d']' -f 1"
    register: pbench_disk_id
  - name: Grab the volume id host 0
    block:
    - name: obtain disk host 0
      shell: "ssh -oStrictHostKeyChecking=no {{ dyn_data.ssh_i_option }} {{ config_info.test_user }}@{{ dyn_data.test_hostname }} sudo lsblk -o +SERIAL | grep {{ pbench_disk_id.stdout }} | awk '{print $1}'"
      register: pb_disk
    - name: record pbench_disk
      include_role:
        name: pbench_disk_setup
      vars:
        pbench_device: "/dev/{{ pb_disk.stdout }}"
        target_sys: "{{ dyn_data.test_hostname }}"
    when: sys_index == "0"

  - name: Grab the volume id host 1
    block:
    - name: obtain disk host 1
      shell: "ssh -oStrictHostKeyChecking=no {{ dyn_data.ssh_i_option }} {{ config_info.test_user }}@{{ dyn_data.net_hostname }} sudo lsblk -o +SERIAL | grep {{ pbench_disk_id.stdout }} | awk '{print $1}'"
      register: pb_disk
    - name: record pbench_disk
      include_role:
        name: pbench_disk_setup
      vars:
        pbench_device: "/dev/{{ pb_disk.stdout }}"
        target_sys: "{{ dyn_data.net_hostname }}"
    when: sys_index != "0"
  when: config_info.system_type == "aws"

# On Azure we always use LUN 10 for the pbench disk, and subsequent data disks start at 11
- name: Find pbench disk on Azure
  block:
  - name: Get device based on LUN 10
    shell: "ssh -oStrictHostKeyChecking=no {{ dyn_data.ssh_i_option }} {{ config_info.test_user }}@{{ dyn_data.test_hostname }} sudo lsscsi | grep ':10]' | awk '{print $7}'"
    register: pb_disk
  - name: record pbench_disk
    include_role:
      name: pbench_disk_setup
    vars:
      pbench_device: "{{ pb_disk.stdout }}"
      target_sys: "{{ dyn_data.test_hostname }}"
  when: config_info.system_type == "azure"

